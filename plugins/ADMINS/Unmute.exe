import logging, os, re, asyncio, requests, aiohttp 
from pyrogram.errors import InputUserDeactivated, UserNotParticipant, FloodWait, UserIsBlocked, PeerIdInvalid                             
from pyrogram.types import Message, InlineKeyboardButton
from pyrogram import filters, enums
from info import AUTH_CHANNEL
from imdb import Cinemagoer
from typing import Union, List
from datetime import datetime, timedelta
from database.users_chats_db import db
from bs4 import BeautifulSoup

logger = logging.getLogger(__name__)
logger.setLevel(logging.INFO)

from pyrogram.types import *
from pyrogram.errors import FloodWait
from pyrogram import Client, filters, enums
from pyrogram.errors.exceptions.forbidden_403 import ChatWriteForbidden
from pyrogram.errors.exceptions.bad_request_400 import ChatAdminRequired, UserAdminInvalid

# from utils import extract_time, extract_user, admin_check, admin_filter                        
from info import ADMINS, SUPPORT_CHAT_ID
from Script import script
from time import time
import asyncio





from pyrogram.enums import ChatMemberStatus, ChatType
from pyrogram.types import Message

from pyrogram.enums import MessageEntityType
       



@Client.on_message(filters.regex("http") & filters.regex("www") | filters.regex("@") | filters.regex("https") | filters.regex("t.me"))
async def nolink(bot,message):
	if message.chat.id != SUPPORT_CHAT_ID:
	                
                user_id = message.from_user.id if message.from_user else None
                chat_id = message.chat.id
                try:              
                        await bot.restrict_chat_member(chat_id, user_id, ChatPermissions(),
                        datetime.now() + timedelta(minutes=1)) #### timedelta(days=1))
                        await message.delete()
                        return
                except:
	                return
      



